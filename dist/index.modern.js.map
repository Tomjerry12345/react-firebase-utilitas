{"version":3,"file":"index.modern.js","sources":["../lib/index.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n  getAuth,\r\n  deleteUser,\r\n} from \"firebase/auth\";\r\nimport { getStorage, ref, getDownloadURL, uploadBytesResumable } from \"firebase/storage\";\r\nimport {\r\n  getFirestore,\r\n  collection,\r\n  addDoc,\r\n  getDocs,\r\n  query,\r\n  where,\r\n  updateDoc,\r\n  doc,\r\n  deleteDoc,\r\n  setDoc,\r\n  serverTimestamp,\r\n  orderBy,\r\n  limit,\r\n  onSnapshot,\r\n} from \"firebase/firestore\";\r\n\r\nconst FirebaseUtilitas = (config) => {\r\n\r\n  const app = initializeApp(config);\r\n  const auth = getAuth(app);\r\n  const storage = getStorage(app);\r\n  const db = getFirestore(app);\r\n\r\n  const timestamp = () => new Date().getTime()\r\n\r\n  const createUser = async (email, password) =>\r\n    await createUserWithEmailAndPassword(auth, email, password);\r\n\r\n  const deleteUserServices = (col, email, password, id) =>\r\n    new Promise(async (resolve, reject) => {\r\n      await loginWithEmail(email, password);\r\n      auth.onAuthStateChanged(function (user) {\r\n        if (user !== null) {\r\n          deleteUser(user)\r\n            .then(() => {\r\n              // User deleted.\r\n              deletDoc(col, id);\r\n              resolve(true);\r\n            })\r\n            .catch((error) => {\r\n              console.error(error)\r\n              resolve(false);\r\n            });\r\n        }\r\n      });\r\n    });\r\n\r\n  const uploadImage = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const storageRef = ref(storage, `images/${file.name}`);\r\n      const uploadTask = uploadBytesResumable(storageRef, file);\r\n\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          const progress =\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n          console.log(\"Upload is \" + progress + \"% done\");\r\n        },\r\n        (error) => {\r\n          reject(error);\r\n        },\r\n        () => {\r\n          getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\r\n            resolve(downloadURL);\r\n          });\r\n        }\r\n      );\r\n    });\r\n  };\r\n\r\n  const addData = (col, data) =>\r\n    addDoc(collection(db, col), { ...data, timestamp: serverTimestamp() });\r\n\r\n  const addDataSpecifict = (col, data) =>\r\n    addDoc(col, { ...data, timestamp: serverTimestamp() });\r\n\r\n  const sendMessage = (dokter, pasien, data) => {\r\n    const colRef = collection(db, `chat`, dokter, \"message\", pasien, \"message\");\r\n    const colUser = doc(db, `chat`, dokter, \"message\", pasien);\r\n    addDoc(colRef, data);\r\n    setDoc(colUser, { generate: timestamp() });\r\n  };\r\n\r\n  const getMessage = (setMessages, dokter, pasien) => {\r\n    const colRef = collection(db, `chat`, dokter, \"message\", pasien, \"message\");\r\n    const q = query(colRef, orderBy(\"timestamp\"), limit(50));\r\n\r\n    const unsubscribe = onSnapshot(q, (QuerySnapshot) => {\r\n      let messages = [];\r\n      QuerySnapshot.forEach((doc) => {\r\n        messages.push({ ...doc.data(), id: doc.id });\r\n      });\r\n      // messages = messages.sort((a, b) => a.timestamp - b.timestamp);\r\n      setMessages(messages);\r\n    });\r\n\r\n    return unsubscribe;\r\n  };\r\n\r\n  const getGrupMessage = async (dokter) => {\r\n    try {\r\n      // const docRef = doc(db, \"chat\", dokter);\r\n      const colRef = collection(db, `chat`, dokter, \"message\");\r\n\r\n      const docs = await getDocs(colRef);\r\n\r\n      const userGroup = [];\r\n      docs.forEach(async (v) => {\r\n        const id = v.id;\r\n        userGroup.push(id);\r\n      });\r\n\r\n      return userGroup;\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  const getDataCollection = async (col) => {\r\n    const collection_ref = collection(db, col);\r\n    const docs = await getDocs(collection_ref);\r\n    const data = [];\r\n    docs.forEach((v) => {\r\n      data.push({ ...v.data(), id: v.id });\r\n    });\r\n\r\n    return data;\r\n  };\r\n\r\n  const getNotif = async (col, setData) => {\r\n    const user = await getCurrentUser();\r\n    const collection_ref = collection(db, col);\r\n\r\n    const q = query(\r\n      collection_ref,\r\n      where(\"email\", \"==\", user.email),\r\n      where(\"new\", \"==\", true)\r\n    );\r\n\r\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n      const newData = [];\r\n      querySnapshot.forEach((doc) => {\r\n        newData.push({ id: doc.id, ...doc.data() });\r\n      });\r\n      console.log(newData);\r\n      // Lakukan sesuatu dengan data newData\r\n    });\r\n  };\r\n\r\n  const getDataSpecifict = async (col) => {\r\n    const collection_ref = col;\r\n    const docs = await getDocs(collection_ref);\r\n    const data = [];\r\n    docs.forEach((v) => {\r\n      data.push({ ...v.data(), id: v.id });\r\n    });\r\n\r\n    return data;\r\n  };\r\n\r\n  const getDataQuery = async (col, key, value) => {\r\n    const collection_ref = collection(db, col);\r\n    const q = query(collection_ref, where(key, \"==\", value));\r\n    const docs = await getDocs(q);\r\n    const data = [];\r\n    docs.forEach((v) => {\r\n      data.push({ ...v.data(), id: v.id });\r\n    });\r\n\r\n    // return data.sort((a, b) => a.timestamp - b.timestamp);\r\n    return data;\r\n  };\r\n\r\n  const getDataQuery2 = async (col, key, value, key1, value1) => {\r\n    const collection_ref = collection(db, col);\r\n    const q = query(\r\n      collection_ref,\r\n      where(key, \"==\", value),\r\n      where(key1, \"==\", value1)\r\n    );\r\n    const docs = await getDocs(q);\r\n    const data = [];\r\n    docs.forEach((v) => {\r\n      data.push({ ...v.data(), id: v.id });\r\n    });\r\n\r\n    // return data.sort((a, b) => a.timestamp - b.timestamp);\r\n    return data;\r\n  };\r\n\r\n  const updateDocX = (col, document, data) =>\r\n    updateDoc(doc(db, col, document), data);\r\n\r\n  const deletDoc = (col, document) => deleteDoc(doc(db, col, document));\r\n\r\n  const loginWithEmail = (email, password) =>\r\n    signInWithEmailAndPassword(auth, email, password);\r\n\r\n  const getCurrentUser = () =>\r\n    new Promise((resolve, reject) => {\r\n      auth.onAuthStateChanged(function (user) {\r\n        if (user) {\r\n          resolve(user);\r\n        } else {\r\n          resolve(null);\r\n        }\r\n      });\r\n    });\r\n\r\n  const onSignOut = async () => await signOut(auth);\r\n\r\n  return {\r\n    createUser,\r\n    deleteUserServices,\r\n    uploadImage,\r\n    addData,\r\n    addDataSpecifict,\r\n    loginWithEmail,\r\n    getDataQuery,\r\n    getDataQuery2,\r\n    getCurrentUser,\r\n    updateDocX,\r\n    deletDoc,\r\n    getDataCollection,\r\n    getNotif,\r\n    getDataSpecifict,\r\n    sendMessage,\r\n    getMessage,\r\n    getGrupMessage,\r\n    onSignOut,\r\n  };\r\n};\r\n\r\nexport default FirebaseUtilitas;"],"names":["FirebaseUtilitas","config","app","initializeApp","auth","getAuth","storage","getStorage","db","getFirestore","deletDoc","col","document","deleteDoc","doc","loginWithEmail","email","password","signInWithEmailAndPassword","getCurrentUser","Promise","resolve","reject","onAuthStateChanged","user","createUser","async","createUserWithEmailAndPassword","deleteUserServices","id","deleteUser","then","catch","error","console","uploadImage","file","storageRef","ref","name","uploadTask","uploadBytesResumable","on","snapshot","log","bytesTransferred","totalBytes","getDownloadURL","downloadURL","addData","data","addDoc","collection","_extends","timestamp","serverTimestamp","addDataSpecifict","getDataQuery","key","value","collection_ref","q","query","where","docs","getDocs","forEach","v","push","getDataQuery2","key1","value1","updateDocX","updateDoc","getDataCollection","getNotif","setData","onSnapshot","querySnapshot","newData","getDataSpecifict","sendMessage","dokter","pasien","colRef","colUser","setDoc","generate","Date","getTime","getMessage","setMessages","orderBy","limit","unsubscribe","QuerySnapshot","messages","getGrupMessage","userGroup","alert","onSignOut","signOut"],"mappings":"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"}